* Product based:These are the company which have their own product to sell
* Service based:These company they may not have or have their product but their primary business is providing service
*project is developeed by service based company
*product is developed by product based company
*project is a short term application development
*product is a long term application development
*client is either a person or an organization using as a service
*client is the one which will use the service and access the information
-----------------------------
*There is a server called DNS derver when we type google,com it will go to the dns server there it will check if ip is available for google
*ipconfig is a command to check ip
----------------------------------
*Client server architecture refers to a system that hosts delivers and manages most of the resources and services that is available for client-server request
*request is sent to the server by protocal.Protocal is set of rules accepted by both client and servers
*HTTP is hyper text transfer protocol
*HTTPS is a secure protocol Hyper Text Tranfer Protocol secure
-----------------------------------
Characteristics of client-server architect
1. Client and server machines they typically have different hardware.Ex chrome browser or other browser, server from IBM and Dell.Vendor company sell their hardware
2. The network has horizintal scalability which increases number of client machines and vertical scalability which increases and enhance our server capabilities
3. Horizontal scalabilty is for client side(How much client I can increase)(|)
4. Vertical scalability is used for server side to ditribute load(How much client requests can be processed)(_)
5. Both client and server side interact with transfer layer protocol
6. Server side is centralized system which will keep all the service in one palace.it improves scalability.
Disdavantegs:
1. Virus or Trojans:If we are downloading any file which is having virus then it will affect client
2. Highly vulenerable if we are using http
------------------------------------------
Types of client-server architechture
1. 1-tier(it means one layer architecture)It contains all set of settings in a single machine.setting consist of data layers
2. 2.tier(it means two layer architecture)It is preffered as best architecture presentation layer client layer will be on a different system and business lyer, database server will be on different system
below required for 2-tier architecture
*.Fat Client Thin Server:Logic and processing happens on the client side ex ms outlook, or any video editing software or dektop video games, here majority of process happens on client side
*.Thin Client Fat Server:Logic and processing happens on the server side here client does not have many reponsibilities ex netflix, hotstar, ecommerce site or video streming site
3. 3-tier(it means three layer architecture):Here we create a middle ware between the client and server which is business layer.client layer(fron-ent UI layer), server layer(Dao-Data access object layer) and business layer(service , serviceimpl layer)
4. N-tier architecture
------------------------------------------
Requirements for client-server architecture
1. Web server
2. Client server and server side validation
3. File server to store small data in the file
4. registery or dns:here we will be registering our ip with name
--------------------------------------------
Logic and processing happens on the server side here client does not have many reponsibilities ex netflix
Logic and processing happens on the client side ex ms word, excess
Http request:
----------------------------------------------
* HTTP is based on TCP ip based communication protocol that is used to provide standardizee way to communicate with each other.
* HTTP is stateless.
URI:Uniform Resource Identifiers ex http::/9092/localhost/lara
* An HTTP client send request to server in the form of request messages once the connection is established using the http protocol between the client nd server
Http request consist of :
1. request line: (it is the url of the request which is used to find resource on the server)
2. request header: (request header is useful to pass lot of information with url)
3. request body:(it is used to send some additional data to the server as json format or xml format)

Http Response: it is a desired resource or information what a client wants from a server.It first contains a status line(status line will show the response code ex ok or bad request) it will also pass some additionl information to the client from the server like http request.
response body: It contains actual info or response demanded by the client.It will show the error also

statust code
-----------
1. Code which start with 1 ex 100 it means request has been succefully sent
---------------------------
* Authentication and Authorization : 
1. Authentication :It verifies the identity of a user to a service
a. Single level authentication: It requires username and password.
b. Two factor authentication or two phase authentication:It is token based authentication. Which means first request will be to get token from the server with user id and password.Token will be encrypted letters.once token is generated based on the token server will accept the request.
2. Authorization: It actually determines the roles of access rights
-----------------------
* Idempotent behaviour: Idempotent implies that a certain operation can be applied many times, without changing the result. Essentially, it is like multiplying a number by zero. No matter how many times you multiply a number, the result is still zero. In order to change the result, you need to change the operation.

*caching : it is like short term live period.It will store some in-memory in application memory data while application is running.
//Try Postman and test methods
//api.domainsdb.info
//universal-tutorial.com/api/getaccesstoken
--------------------------
* MVC is a design pattern and it is also called as a arcitechtural pattern  which devides code into 3 different components.
* It wil be helpful for a developer like us for clean separation of components
* Arcitechtural pattern: The pattern which governs/control the whole architecture of our application.It is used for solving larger architectural problems.
* Design patterns are the best practices used by a software developerDesign pattern here is a solution to general problems that a developer face during software development.
* MVC divides a software application in 3 layers
  Model
  View
  Controller (Mostly controllers are the servlets)
* business logic in JSP's also, In servlet also (This will create confusion and complexity)
* Isolation of application logic from the User Interface
* Each of the component have some specific responsibility
* Model : Interacts with Database, Also responsible for executing business logic.(All java classes, Entity classes, java beans, Define the Database, Schemmas, DataSource object)
* View : What user sees on the screen, Generate UI for the users.(Any presentation logic/technology ex HTML, CSS)
* Controller : takes user input (Request param), Also interacts with model and view. Controller hold the function which calls the service and deals with Raw data. Controller here acts as a mediater between model and view.(Servlets/Servlets Filter)
* Router :(all our api's), Defines the Endpoints
* Services : Establish a connection to the database, All the database quries should be written here, ALl the data manipulation logics to be written here, get the data from the database
* what architecture you followed during developing your peoject?:I followed MVC architecture
* in general term model layer is also called as service
------------------------------------------------------------
Raw folder structure



